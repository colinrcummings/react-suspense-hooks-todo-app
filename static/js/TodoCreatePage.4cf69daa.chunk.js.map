{"version":3,"sources":["components/TodoForm.js","components/pages/TodoCreatePage.js"],"names":["TodoForm","_ref","_ref$initialText","initialText","_ref$initialCompleted","initialCompleted","onSubmit","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","completed","setCompleted","_useState5","_useState6","onSubmitError","setOnSubmitError","react_default","a","createElement","className","reactstrap_es","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","then","navigate","concat","process","catch","error","message","stop","this","_x","apply","arguments","for","type","id","name","value","onChange","e","target","checked","style","position","display","marginLeft","outline","color","size","es","to","TodoCreatePage","createTodo","useContext","TodoContext","xs","components_TodoForm"],"mappings":"8KA0DeA,EAtDE,SAAAC,GAA8D,IAAAC,EAAAD,EAA3DE,mBAA2D,IAAAD,EAA7C,GAA6CA,EAAAE,EAAAH,EAAzCI,wBAAyC,IAAAD,KAAfE,EAAeL,EAAfK,SAAeC,EACrDC,mBAASL,GAD4CM,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtEK,EADsEH,EAAA,GAChEI,EADgEJ,EAAA,GAAAK,EAE3CN,mBAASH,GAFkCU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEtEE,EAFsED,EAAA,GAE3DE,EAF2DF,EAAA,GAAAG,EAGnCV,mBAAS,MAH0BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGtEE,EAHsED,EAAA,GAGvDE,EAHuDF,EAAA,GAK7E,OACEG,EAAAC,EAAAC,cAAA,WACGJ,GAAiBE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,UAAmCL,GACrDE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEpB,SAAQ,eAAAqB,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAAN,EAAAO,KAAE,SAAAC,EAAMC,GAAN,OAAAH,EAAAN,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACRJ,EAAMK,iBADEH,EAAAE,KAAA,EAEF9B,EAAS,CAAEM,OAAMI,cACpBsB,KAAK,WACJC,YAAQ,GAAAC,OAAIC,iCAAJ,QAETC,MAAM,SAAAC,GAAK,OAAItB,EAAiBsB,EAAMC,WANjC,wBAAAV,EAAAW,SAAAd,EAAAe,SAAF,gBAAAC,GAAA,OAAApB,EAAAqB,MAAAF,KAAAG,YAAA,IASR3B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwB,IAAI,QAAX,QACA5B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEyB,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,MAAO1C,EACP2C,SAAU,SAAAC,GAAC,OAAI3C,EAAQ2C,EAAEC,OAAOH,WAGpChC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOwB,IAAI,aAAX,aACA5B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEyB,KAAK,WACLC,GAAG,YACHC,KAAK,YACLK,QAAS1C,EACTuC,SAAU,SAAAC,GAAC,OAAIvC,EAAauC,EAAEC,OAAOC,UACrCC,MAAO,CAAEC,SAAU,SAAUC,QAAS,QAASC,WAAY,MAG/DxC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQyB,KAAK,SAASY,SAAO,EAACC,MAAM,UAAUC,KAAK,MAAnD,UAEU,IACV3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAMC,GAAE,GAAA3B,OAAKC,iCAAL,MACNnB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQqC,SAAO,EAACC,MAAM,SAASC,KAAK,MAApC,eC3BGG,UAfQ,WAAM,IACnBC,EAAeC,qBAAWC,KAA1BF,WAER,OACE/C,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAK8C,GAAI,GAAI/C,UAAU,eACrBH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAK8C,GAAI,IACPlD,EAAAC,EAAAC,cAACiD,EAAD,CAAUnE,SAAU+D","file":"static/js/TodoCreatePage.4cf69daa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst TodoForm = ({ initialText = '', initialCompleted = false, onSubmit }) => {\n  const [text, setText] = useState(initialText);\n  const [completed, setCompleted] = useState(initialCompleted);\n  const [onSubmitError, setOnSubmitError] = useState(null);\n\n  return (\n    <div>\n      {onSubmitError && <p className=\"text-danger\">Error: {onSubmitError}</p>}\n      <Form\n        onSubmit={async event => {\n          event.preventDefault();\n          await onSubmit({ text, completed })\n            .then(() => {\n              navigate(`${process.env.PUBLIC_URL}/`);\n            })\n            .catch(error => setOnSubmitError(error.message));\n        }}\n      >\n        <FormGroup>\n          <Label for=\"text\">Text</Label>\n          <Input\n            type=\"text\"\n            id=\"test\"\n            name=\"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"completed\">Completed</Label>\n          <Input\n            type=\"checkbox\"\n            id=\"completed\"\n            name=\"completed\"\n            checked={completed}\n            onChange={e => setCompleted(e.target.checked)}\n            style={{ position: 'static', display: 'block', marginLeft: 0 }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Button type=\"submit\" outline color=\"success\" size=\"sm\">\n            Submit\n          </Button>{' '}\n          <Link to={`${process.env.PUBLIC_URL}/`}>\n            <Button outline color=\"danger\" size=\"sm\">\n              Cancel\n            </Button>\n          </Link>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React, { useContext } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport TodoContext from '../../contexts/TodoContext';\nimport TodoForm from '../TodoForm';\n\nconst TodoCreatePage = () => {\n  const { createTodo } = useContext(TodoContext);\n\n  return (\n    <Row>\n      <Col xs={12} className=\"text-center\">\n        <h2>Create Todo</h2>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <TodoForm onSubmit={createTodo} />\n      </Col>\n    </Row>\n  );\n};\nexport default TodoCreatePage;\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useDocumentTitle.js","components/TodoCompletedBadge.js","components/TodoNotFound.js","components/TodoDetailsTable.js","components/pages/TodoDetailsPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useDocumentTitle","title","useEffect","document","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","TodoCompletedBadge","_ref","completed","a","createElement","color","_reach_router__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_utils_router__WEBPACK_IMPORTED_MODULE_3__","TodoNotFound","id","className","xs","to","makeTo","TodoDetailsTable","todo","createdAt","createdBy","updatedAt","updatedBy","react_default","reactstrap_es","bordered","size","formatDate","TodoDetailsPage","_useContext","useContext","TodoContext","isLoading","getTodoById","deleteTodo","concat","text","handleDelete","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","then","navigate","catch","_ref3","message","alert","stop","this","apply","arguments","IsLoading","es","type","onClick","components_TodoDetailsTable"],"mappings":"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","file":"static/js/TodoDetailsPage.0a2fe76e.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nconst useDocumentTitle = title => {\n  useEffect(\n    () => {\n      document.title = title;\n    },\n    [title]\n  );\n};\n\nexport default useDocumentTitle;\n","import React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst TodoCompletedBadge = ({ completed }) => (\n  <Badge color={completed ? 'success' : 'danger'}>\n    {completed ? 'Completed' : 'Not Completed'}\n  </Badge>\n);\n\nexport default TodoCompletedBadge;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { Row, Col } from 'reactstrap';\nimport { makeTo } from '../utils/router';\n\nconst TodoNotFound = ({ id }) => (\n  <Row className=\"text-center\">\n    <Col xs={12}>\n      <h1>Todo Not Found</h1>\n      <hr />\n    </Col>\n    <Col xs={12}>\n      <p className=\" text-danger\">\n        A todo does not exist with id &#34;\n        {id}\n        &#34;.\n      </p>\n    </Col>\n    <Col xs={12}>\n      <Link to={makeTo('/')}>All Todos</Link>\n    </Col>\n  </Row>\n);\n\nexport default TodoNotFound;\n","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { formatDate } from '../utils/date';\n\nconst TodoDetailsTable = ({ todo }) => {\n  const { createdAt, createdBy, updatedAt, updatedBy } = todo;\n\n  return (\n    <Table bordered size=\"sm\" className=\"text-center\">\n      <thead>\n        <tr>\n          <th>Action</th>\n          <th>Date</th>\n          <th>User</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Create</td>\n          <td>{formatDate(createdAt)}</td>\n          <td>{createdBy}</td>\n        </tr>\n        <tr>\n          <td>Update</td>\n          <td>{formatDate(updatedAt)}</td>\n          <td>{updatedBy}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\nexport default TodoDetailsTable;\n","import React, { useContext } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Row, Col } from 'reactstrap';\nimport TodoContext from '../../contexts/TodoContext';\nimport IsLoading from '../IsLoading';\nimport TodoNotFound from '../TodoNotFound';\nimport TodoCompletedBadge from '../TodoCompletedBadge';\nimport TodoDetailsTable from '../TodoDetailsTable';\nimport useDocumentTitle from '../../hooks/useDocumentTitle';\nimport { makeTo } from '../../utils/router';\n\nconst TodoDetailsPage = ({ id }) => {\n  const { isLoading, getTodoById, deleteTodo } = useContext(TodoContext);\n  const todo = getTodoById(id);\n  useDocumentTitle(todo ? `Details for \"${todo.text}\" todo` : 'Todo Not Found');\n\n  const handleDelete = async () => {\n    await deleteTodo(id)\n      .then(() => navigate(makeTo('/')))\n      .catch(({ message }) => alert(`Error deleting todo: ${message}`));\n  };\n\n  if (!isLoading && !todo) {\n    return <TodoNotFound id={id} />;\n  }\n\n  if (isLoading) {\n    return (\n      <Row>\n        <Col xs={12}>\n          <IsLoading />\n        </Col>\n      </Row>\n    );\n  }\n\n  const { text, completed } = todo;\n\n  return (\n    <Row>\n      <Col xs={12} className=\"text-center\">\n        <h1>\n          {text} <TodoCompletedBadge completed={completed} />\n        </h1>\n        <Link to={makeTo(`/update/${id}`)}>Update</Link>\n        <span className=\"text-muted\"> | </span>\n        <button\n          type=\"button\"\n          className=\"look-like-a-link\"\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n        <hr />\n      </Col>\n      <Col xs={12} className=\"text-center\">\n        <TodoDetailsTable todo={todo} />\n        <Link to={makeTo('/')}>All Todos</Link>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoDetailsPage;\n"],"sourceRoot":""}
{"version":3,"sources":["config.js","contexts/UserContext.js","components/Footer.js","components/UserModal.js","components/App.js","components/Root.js","index.js","utils/router.js","utils/date.js","api/data.js","api/index.js","contexts/TodoContext.js","components/IsLoading.js","utils/localStorage.js","api/utils.js"],"names":["USE_LOCAL_STORAGE_FOR_TODOS","MIN_RANDOM_API_DELAY_MIN_MS","RANDOM_API_DELAY_MAX_MS","FIXED_API_DELAY_MS","undefined","THROW_API_ERRORS","initialUser","getUserFromLocalStorage","UserContext","createContext","UserProvider","children","useState","user","setUser","Provider","value","updateUser","nextUser","setUserToLocalStorage","Footer","clearUser","className","Container","type","title","onClick","UserModal","hasOpened","setHasOpened","userInputRef","useRef","useEffect","current","focus","isOpen","onAfterOpen","overlayClassName","portalClassName","bodyOpenClassName","ariaHideApp","ModalHeader","Form","onSubmit","event","preventDefault","ModalBody","Input","innerRef","aria-label","placeholder","onChange","target","ModalFooter","Button","color","TodoListPage","React","lazy","TodoDetailsPage","TodoCreatePage","TodoUpdatePage","App","useContext","fallback","IsLoading","path","makeTo","Root","ReactDOM","createRoot","document","getElementById","render","pathname","process","getDate","Date","getTime","formatDate","toLocaleString","defaultTodosData","id","v4","text","completed","createdAt","createdBy","updatedAt","updatedBy","todosData","todosFromLocalStorage","getTodosFromLocalStorage","setTodosToLocalStorage","getTodosData","setTodosData","nextTodosData","api","todos","list","a","async","console","log","apiDelayPerConfig","apiErrorPerConfig","create","values","date","newTodo","update","map","todo","delete","idxToDelete","findIndex","filter","idx","initialState","isLoading","error","TodoContext","TodoProvider","useReducer","state","action","payload","store","dispatch","getTodos","getTodoById","find","createTodo","updateTodo","deleteTodo","message","getLocalStorageValue","key","localStorage","getItem","JSON","parse","setLocalStorage","setItem","stringify","getRandomMs","min","max","Math","floor","random","ms","Promise","resolve","setTimeout","getRandomErrorEmoji","errors","length","Error","throwRandomError"],"mappings":"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","file":"static/js/main.750a1497.chunk.js","sourcesContent":["export const USE_LOCAL_STORAGE_FOR_TODOS = true; // boolean\n\nexport const MIN_RANDOM_API_DELAY_MIN_MS = 100; // number\n\nexport const RANDOM_API_DELAY_MAX_MS = 1600; // number\n\nexport const FIXED_API_DELAY_MS = undefined; // number or undefined (in which case it will be random)\n\nexport const THROW_API_ERRORS = 'NEVER'; // 'NEVER', 'RANDOM' or 'ALWAYS'\n","import React, { createContext, useState } from 'react';\nimport { getUserFromLocalStorage, setUserToLocalStorage } from '../api/utils';\n\nconst initialUser = getUserFromLocalStorage();\n\nconst UserContext = createContext(null);\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(initialUser);\n\n  const updateUser = nextUser => {\n    setUser(nextUser);\n    setUserToLocalStorage(nextUser);\n  };\n\n  return (\n    <UserContext.Provider value={{ user, updateUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContext;\n","import React from 'react';\nimport { Container } from 'reactstrap';\n\nconst Footer = ({ user, clearUser }) => (\n  <div className=\"mt-auto\">\n    <div className=\"footer\">\n      <Container className=\"text-center\">\n        {user && (\n          <span className=\"text-muted\">\n            Logged in as{' '}\n            <button\n              type=\"button\"\n              className=\"look-like-a-link\"\n              title=\"Change user\"\n              onClick={clearUser}\n            >\n              {user}\n            </button>\n          </span>\n        )}\n      </Container>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import React, { useState, useRef, useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport {\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  Input,\n  Button\n} from 'reactstrap';\n\nconst UserModal = ({ updateUser }) => {\n  const [hasOpened, setHasOpened] = useState(false);\n  const [user, setUser] = useState('');\n  const userInputRef = useRef(null);\n\n  useEffect(\n    () => {\n      if (userInputRef.current) {\n        userInputRef.current.focus();\n      }\n    },\n    [hasOpened]\n  );\n\n  return (\n    <ReactModal\n      isOpen\n      onAfterOpen={() => setHasOpened(true)}\n      className=\"modal-content\"\n      overlayClassName=\"modal-dialog\"\n      portalClassName=\"modal fade show\"\n      bodyOpenClassName=\"modal-open\"\n      ariaHideApp={false}\n    >\n      <ModalHeader>User</ModalHeader>\n      <Form\n        onSubmit={event => {\n          event.preventDefault();\n          updateUser(user);\n        }}\n      >\n        <ModalBody>\n          <Input\n            innerRef={userInputRef}\n            aria-label=\"User\"\n            placeholder=\"enter username\"\n            type=\"text\"\n            value={user}\n            onChange={event => setUser(event.target.value)}\n          />\n        </ModalBody>\n        <ModalFooter>\n          <Button type=\"submit\" color=\"primary\">\n            Submit\n          </Button>\n        </ModalFooter>\n      </Form>\n    </ReactModal>\n  );\n};\n\nexport default UserModal;\n","import { Router } from '@reach/router';\nimport React, { Suspense, useContext } from 'react';\nimport { Container } from 'reactstrap';\nimport UserContext from '../contexts/UserContext';\nimport { makeTo } from '../utils/router';\nimport Footer from './Footer';\nimport IsLoading from './IsLoading';\nimport UserModal from './UserModal';\n\nconst TodoListPage = React.lazy(() =>\n  import(/* webpackChunkName: 'TodoListPage' */ './pages/TodoListPage')\n);\nconst TodoDetailsPage = React.lazy(() =>\n  import(/* webpackChunkName: 'TodoDetailsPage' */ './pages/TodoDetailsPage')\n);\nconst TodoCreatePage = React.lazy(() =>\n  import(/* webpackChunkName: 'TodoCreatePage' */ './pages/TodoCreatePage')\n);\nconst TodoUpdatePage = React.lazy(() =>\n  import(/* webpackChunkName: 'TodoUpdatePage' */ './pages/TodoUpdatePage')\n);\n\nconst App = () => {\n  const { user, updateUser } = useContext(UserContext);\n\n  return (\n    <Suspense fallback={<IsLoading />}>\n      <Container>\n        <Router>\n          <TodoListPage path={makeTo('/')} />\n          <TodoDetailsPage path={makeTo('/details/:id')} />\n          <TodoCreatePage path={makeTo('/create')} />\n          <TodoUpdatePage path={makeTo('/update/:id')} />\n        </Router>\n      </Container>\n      <Footer user={user} clearUser={() => updateUser(null)} />\n      {!user && <UserModal updateUser={updateUser} />}\n    </Suspense>\n  );\n};\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport { TodoProvider } from '../contexts/TodoContext';\nimport { UserProvider } from '../contexts/UserContext';\nimport App from './App';\n// import UnsafeExample from './UnsafeExample';\n\nconst Root = () => (\n  <StrictMode>\n    <UserProvider>\n      <TodoProvider>\n        <App />\n      </TodoProvider>\n    </UserProvider>\n  </StrictMode>\n);\n\nexport default Root;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(<Root />);\n","/* eslint-disable import/prefer-default-export */\nexport const makeTo = pathname => `${process.env.PUBLIC_URL}${pathname}`;\n","export const getDate = () => new Date().getTime();\n\nexport const formatDate = value => {\n  const dt = new Date(value);\n  return dt.toLocaleString();\n};\n","import { v4 } from 'node-uuid';\nimport { USE_LOCAL_STORAGE_FOR_TODOS } from '../config';\nimport { getTodosFromLocalStorage, setTodosToLocalStorage } from './utils';\n\nconst defaultTodosData = [\n  {\n    id: v4(),\n    text: 'Try Suspense',\n    completed: true,\n    createdAt: 1541163993401,\n    createdBy: 'colinrcummings',\n    updatedAt: 1541163996938,\n    updatedBy: 'colinrcummings'\n  },\n  {\n    id: v4(),\n    text: 'Try Hooks',\n    completed: true,\n    createdAt: 1541163995178,\n    createdBy: 'colinrcummings',\n    updatedAt: 1541163996938,\n    updatedBy: 'colinrcummings'\n  },\n  {\n    id: v4(),\n    text: 'Profit',\n    completed: false,\n    createdAt: 1541163996071,\n    createdBy: 'colinrcummings',\n    updatedAt: 1541163996071,\n    updatedBy: 'colinrcummings'\n  }\n];\n\nlet todosData = (() => {\n  if (USE_LOCAL_STORAGE_FOR_TODOS) {\n    const todosFromLocalStorage = getTodosFromLocalStorage();\n\n    if (todosFromLocalStorage) {\n      return todosFromLocalStorage;\n    }\n\n    setTodosToLocalStorage(defaultTodosData);\n    return defaultTodosData;\n  }\n\n  return defaultTodosData;\n})();\n\nexport const getTodosData = () => todosData;\n\nexport const setTodosData = nextTodosData => {\n  todosData = nextTodosData;\n  if (USE_LOCAL_STORAGE_FOR_TODOS) setTodosToLocalStorage(nextTodosData);\n};\n","/* eslint-disable no-console */\nimport { v4 } from 'node-uuid';\nimport { getDate } from '../utils/date';\nimport { getTodosData, setTodosData } from './data';\nimport {\n  getUserFromLocalStorage,\n  apiDelayPerConfig,\n  apiErrorPerConfig\n} from './utils';\n\nconst listTodos = async () => {\n  console.log('📞 `api.todos.list` called:');\n  await apiDelayPerConfig();\n  apiErrorPerConfig();\n\n  return getTodosData();\n};\n\nconst createTodo = async values => {\n  console.log(`📞 api.todos.create called:`);\n  await apiDelayPerConfig();\n  apiErrorPerConfig();\n\n  const date = getDate();\n  const user = getUserFromLocalStorage();\n  const newTodo = {\n    ...values,\n    id: v4(),\n    createdAt: date,\n    createdBy: user,\n    updatedAt: date,\n    updatedBy: user\n  };\n\n  setTodosData([...getTodosData(), newTodo]);\n};\n\nconst updateTodo = async (id, values) => {\n  console.log(`📞 api.todos.update called:`);\n  await apiDelayPerConfig();\n  apiErrorPerConfig();\n\n  setTodosData(\n    getTodosData().map(todo => {\n      if (todo.id !== id) {\n        return todo;\n      }\n      return {\n        ...todo,\n        ...values,\n        updatedAt: getDate(),\n        updatedBy: getUserFromLocalStorage()\n      };\n    })\n  );\n};\n\nconst deleteTodo = async id => {\n  console.log(`📞 api.todos.delete called:`);\n  await apiDelayPerConfig();\n  apiErrorPerConfig();\n\n  const idxToDelete = getTodosData().findIndex(todo => todo.id === id);\n\n  setTodosData(getTodosData().filter((todo, idx) => idx !== idxToDelete));\n};\n\nconst api = {\n  todos: {\n    list: listTodos,\n    create: createTodo,\n    update: updateTodo,\n    delete: deleteTodo\n  }\n};\n\nexport default api;\n","import React, { createContext, useReducer, useEffect } from 'react';\nimport api from '../api';\n\nconst initialState = {\n  isLoading: true,\n  error: null,\n  todos: null\n};\n\nconst FETCH_TODO_LIST_SUCCESS = 'FETCH_TODO_LIST_SUCCESS';\nconst FETCH_TODO_LIST_ERROR = 'FETCH_TODO_LIST_ERROR';\n\nconst TodoContext = createContext(null);\n\nexport const TodoProvider = ({ children }) => {\n  const [store, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case FETCH_TODO_LIST_SUCCESS:\n        return {\n          ...state,\n          isLoading: false,\n          error: null,\n          todos: action.payload.todos\n        };\n\n      case FETCH_TODO_LIST_ERROR:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.payload.error,\n          todos: null\n        };\n\n      default:\n        return state;\n    }\n  }, initialState);\n\n  const getTodos = async () => {\n    try {\n      const todos = await api.todos.list();\n      dispatch({ type: FETCH_TODO_LIST_SUCCESS, payload: { todos } });\n    } catch (error) {\n      dispatch({ type: FETCH_TODO_LIST_ERROR, payload: { error } });\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const getTodoById = id => {\n    const { todos } = store;\n\n    if (todos) {\n      return todos.find(todo => todo.id === id);\n    }\n\n    return null;\n  };\n\n  const createTodo = async ({ values }) => {\n    try {\n      await api.todos.create(values);\n    } catch (error) {\n      throw error;\n    }\n\n    await getTodos();\n  };\n\n  const updateTodo = async ({ id, values }) => {\n    try {\n      await api.todos.update(id, values);\n    } catch (error) {\n      throw error;\n    }\n\n    await getTodos();\n  };\n\n  const deleteTodo = async id => {\n    try {\n      await api.todos.delete(id);\n    } catch (error) {\n      throw error;\n    }\n\n    await getTodos();\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{ ...store, getTodoById, createTodo, updateTodo, deleteTodo }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoContext;\n","import React from 'react';\n\nconst IsLoading = ({ message = null }) => (\n  <p className=\"text-center text-muted\">{message || 'Loading...'}</p>\n);\n\nexport default IsLoading;\n","export const getLocalStorageValue = key => {\n  const value = localStorage.getItem(key);\n  if (!value) return null;\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const setLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n","/* eslint-disable no-console */\nimport {\n  MIN_RANDOM_API_DELAY_MIN_MS,\n  RANDOM_API_DELAY_MAX_MS,\n  FIXED_API_DELAY_MS,\n  THROW_API_ERRORS\n} from '../config';\nimport { getLocalStorageValue, setLocalStorage } from '../utils/localStorage';\n\n/*\n  local storage\n*/\nconst USER_LOCAL_STORAGE_KEY = 'USER';\nconst TODOS_LOCAL_STORAGE_KEY = 'TODOS';\n\nexport const getUserFromLocalStorage = () => {\n  const user = getLocalStorageValue(USER_LOCAL_STORAGE_KEY);\n\n  if (user) {\n    console.log('👤 `user` read from local storage');\n    return user;\n  }\n\n  return null;\n};\n\nexport const setUserToLocalStorage = user => {\n  console.log('👤 `user` written to local storage');\n  setLocalStorage(USER_LOCAL_STORAGE_KEY, user);\n};\n\nexport const getTodosFromLocalStorage = () => {\n  const todos = getLocalStorageValue(TODOS_LOCAL_STORAGE_KEY);\n\n  if (todos) {\n    console.log('🗒 `todos` read from local storage');\n    return JSON.parse(todos);\n  }\n\n  return null;\n};\n\nexport const setTodosToLocalStorage = todos => {\n  console.log('🗒 `todos` written to local storage');\n  setLocalStorage(TODOS_LOCAL_STORAGE_KEY, JSON.stringify(todos));\n};\n\n/*\n  delay\n*/\nconst getRandomMs = ({\n  min = MIN_RANDOM_API_DELAY_MIN_MS,\n  max = RANDOM_API_DELAY_MAX_MS\n} = {}) => Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const apiDelayPerConfig = (ms = FIXED_API_DELAY_MS || getRandomMs()) => {\n  console.log(`     - ⏲️ delay was ${ms} ms`);\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\n/*\n  errors\n*/\nconst getRandomErrorEmoji = () => {\n  const errors = ['😢', '👹', '💩', '💣', '💀'];\n  return errors[Math.floor(Math.random() * errors.length)];\n};\n\nconst throwRandomError = () => {\n  if (Math.random() > 0.5) {\n    throw new Error(getRandomErrorEmoji());\n  }\n};\n\nexport const apiErrorPerConfig = () => {\n  switch (THROW_API_ERRORS) {\n    case 'ALWAYS':\n      throw new Error(getRandomErrorEmoji());\n    case 'RANDOM':\n      return throwRandomError();\n    case 'NEVER':\n    default:\n      return undefined;\n  }\n};\n"],"sourceRoot":""}
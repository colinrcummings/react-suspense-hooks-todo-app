{"version":3,"sources":["components/TodoCompletedBadge.js","hooks/useDocumentTitle.js","components/TodoCreateLink.js","components/HasError.js","components/TodoListGroupItem.js","components/TodoListGroup.js","components/TodoList.js","components/pages/TodoListPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","TodoCompletedBadge","_ref","completed","a","createElement","color","useDocumentTitle","title","useEffect","document","TodoCreateLink","react_default","es","to","makeTo","HasError","_ref$message","message","className","TodoListGroupItem","id","text","deleteTodo","useContext","TodoContext","handleDelete","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","catch","_ref3","alert","concat","stop","this","apply","arguments","reactstrap_es","type","onClick","TodoListGroup","todos","map","todo","components_TodoListGroupItem","assign","key","TodoList","xs","length","components_TodoListGroup","TodoListPage","_useContext","isLoading","error","components_TodoCreateLink","IsLoading","components_HasError","components_TodoList"],"mappings":"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","file":"static/js/TodoListPage.26fac326.chunk.js","sourcesContent":["import React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst TodoCompletedBadge = ({ completed }) => (\n  <Badge color={completed ? 'success' : 'danger'}>\n    {completed ? 'Completed' : 'Not Completed'}\n  </Badge>\n);\n\nexport default TodoCompletedBadge;\n","import { useEffect } from 'react';\n\nconst useDocumentTitle = title => {\n  useEffect(\n    () => {\n      document.title = title;\n    },\n    [title]\n  );\n};\n\nexport default useDocumentTitle;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { makeTo } from '../utils/router';\n\nconst TodoCreateLink = () => <Link to={makeTo('/create')}>Create</Link>;\n\nexport default TodoCreateLink;\n","import React from 'react';\n\nconst HasError = ({ message = null }) => (\n  <p className=\"text-center text-danger\">{message || 'Error!'}</p>\n);\n\nexport default HasError;\n","import React, { useContext } from 'react';\nimport { Link } from '@reach/router';\nimport { ListGroupItem } from 'reactstrap';\nimport TodoContext from '../contexts/TodoContext';\nimport TodoCompletedBadge from './TodoCompletedBadge';\nimport { makeTo } from '../utils/router';\n\nconst TodoListGroupItem = ({ id, text, completed }) => {\n  const { deleteTodo } = useContext(TodoContext);\n\n  const handleDelete = async () => {\n    await deleteTodo(id).catch(({ message }) =>\n      alert(`Error deleting todo: ${message}`)\n    );\n  };\n\n  return (\n    <ListGroupItem className=\"text-center\">\n      <h4>\n        {text} <TodoCompletedBadge completed={completed} />\n      </h4>\n      <Link to={makeTo(`/details/${id}`)}>Details</Link>\n      <span className=\"text-muted\"> | </span>\n      <button type=\"button\" className=\"look-like-a-link\" onClick={handleDelete}>\n        Delete\n      </button>\n    </ListGroupItem>\n  );\n};\nexport default TodoListGroupItem;\n","import React from 'react';\nimport { ListGroup } from 'reactstrap';\nimport TodoListGroupItem from './TodoListGroupItem';\n\nconst TodoListGroup = ({ todos }) => (\n  <ListGroup>\n    {todos.map(todo => (\n      <TodoListGroupItem key={todo.id} {...todo} />\n    ))}\n  </ListGroup>\n);\n\nexport default TodoListGroup;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport TodoListGroup from './TodoListGroup';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\n\nconst TodoList = ({ todos }) => {\n  useDocumentTitle('Todos');\n\n  return (\n    <Row>\n      <Col xs={12}>\n        {todos.length ? <TodoListGroup todos={todos} /> : <p>No todos.</p>}\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport TodoContext from '../../contexts/TodoContext';\nimport TodoCreateLink from '../TodoCreateLink';\nimport IsLoading from '../IsLoading';\nimport HasError from '../HasError';\nimport TodoList from '../TodoList';\n\nconst TodoListPage = () => {\n  const { isLoading, error, todos } = useContext(TodoContext);\n\n  return (\n    <Row className=\"text-center\">\n      <Col xs={12}>\n        <h2>Todos</h2>\n        <TodoCreateLink />\n        <hr />\n      </Col>\n      <Col xs={12}>\n        {(() => {\n          if (isLoading) {\n            return <IsLoading message=\"Loading todos...\" />;\n          }\n\n          if (error) {\n            return (\n              <HasError message={`Error loading todos: ${error.message}`} />\n            );\n          }\n\n          return <TodoList todos={todos} />;\n        })()}\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoListPage;\n"],"sourceRoot":""}
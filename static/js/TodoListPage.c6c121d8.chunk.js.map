{"version":3,"sources":["hooks/useDocumentTitle.js","components/TodoCompletedBadge.js","components/TodoCreateLink.js","components/HasError.js","components/TodoListGroupItem.js","components/TodoListGroup.js","components/TodoList.js","components/pages/TodoListPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useDocumentTitle","title","useEffect","document","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","TodoCompletedBadge","_ref","completed","a","createElement","color","TodoCreateLink","react_default","es","to","concat","process","HasError","_ref$resourceName","resourceName","className","TodoListGroupItem","id","text","reactstrap_es","TodoListGroup","todos","map","todo","components_TodoListGroupItem","Object","assign","key","TodoList","xs","length","components_TodoListGroup","TodoListPage","_useContext","useContext","TodoContext","isLoading","error","components_TodoCreateLink","IsLoading","components_HasError","components_TodoList"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAWeC,IATU,SAAAC,GACvBC,oBACE,WACEC,SAASF,MAAQA,GAEnB,CAACA,uCCPL,IAAAH,EAAAC,EAAA,GAAAK,EAAAL,EAAAM,EAAAP,GAAAQ,EAAAP,EAAA,IASeQ,IANY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACzBL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAOM,MAAOH,EAAY,UAAY,UACnCA,EAAY,YAAc,uGCEhBI,EAJQ,kBACrBC,EAAAJ,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,GAAAC,OAAKC,iCAAL,YAAR,mBCIaC,EANE,SAAAX,GAAA,IAAAY,EAAAZ,EAAGa,oBAAH,IAAAD,EAAkB,KAAlBA,EAAA,OACfN,EAAAJ,EAAAC,cAAA,KAAGW,UAAU,2BACVD,EAAY,iBAAAJ,OAAoBI,EAApB,KAAsC,qCCWxCE,EATW,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,GAAIC,EAAPjB,EAAOiB,KAAMhB,EAAbD,EAAaC,UAAb,OACxBK,EAAAJ,EAAAC,cAACe,EAAA,EAAD,CAAeJ,UAAU,eACvBR,EAAAJ,EAAAC,cAAA,UACGc,EADH,IACSX,EAAAJ,EAAAC,cAACJ,EAAA,EAAD,CAAoBE,UAAWA,KAExCK,EAAAJ,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,GAAAC,OAAKC,iCAAL,aAAAD,OAAuCO,IAA/C,aCEWG,EARO,SAAAnB,GAAA,IAAGoB,EAAHpB,EAAGoB,MAAH,OACpBd,EAAAJ,EAAAC,cAACe,EAAA,EAAD,KACGE,EAAMC,IAAI,SAAAC,GAAI,OACbhB,EAAAJ,EAAAC,cAACoB,EAADC,OAAAC,OAAA,CAAmBC,IAAKJ,EAAKN,IAAQM,QCU5BK,EAZE,SAAA3B,GAAe,IAAZoB,EAAYpB,EAAZoB,MAGlB,OAFA5B,YAAiB,SAGfc,EAAAJ,EAAAC,cAACe,EAAA,EAAD,KACEZ,EAAAJ,EAAAC,cAACe,EAAA,EAAD,CAAKU,GAAI,IACNR,EAAMS,OAASvB,EAAAJ,EAAAC,cAAC2B,EAAD,CAAeV,MAAOA,IAAYd,EAAAJ,EAAAC,cAAA,yBCwB3C4B,UA3BM,WAAM,IAAAC,EACWC,qBAAWC,KAAvCC,EADiBH,EACjBG,UAAWC,EADMJ,EACNI,MAAOhB,EADDY,EACCZ,MAE1B,OACEd,EAAAJ,EAAAC,cAACe,EAAA,EAAD,CAAKJ,UAAU,eACbR,EAAAJ,EAAAC,cAACe,EAAA,EAAD,CAAKU,GAAI,IACPtB,EAAAJ,EAAAC,cAAA,mBACAG,EAAAJ,EAAAC,cAACkC,EAAD,MACA/B,EAAAJ,EAAAC,cAAA,YAEFG,EAAAJ,EAAAC,cAACe,EAAA,EAAD,CAAKU,GAAI,IAEDO,EACK7B,EAAAJ,EAAAC,cAACmC,EAAA,EAAD,CAAWzB,aAAa,UAG7BuB,EACK9B,EAAAJ,EAAAC,cAACoC,EAAD,CAAU1B,aAAa,UAGzBP,EAAAJ,EAAAC,cAACqC,EAAD,CAAUpB,MAAOA","file":"static/js/TodoListPage.c6c121d8.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nconst useDocumentTitle = title => {\n  useEffect(\n    () => {\n      document.title = title;\n    },\n    [title]\n  );\n};\n\nexport default useDocumentTitle;\n","import React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst TodoCompletedBadge = ({ completed }) => (\n  <Badge color={completed ? 'success' : 'danger'}>\n    {completed ? 'Completed' : 'Not Completed'}\n  </Badge>\n);\n\nexport default TodoCompletedBadge;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nconst TodoCreateLink = () => (\n  <Link to={`${process.env.PUBLIC_URL}/create`}>Create</Link>\n);\n\nexport default TodoCreateLink;\n","import React from 'react';\n\nconst HasError = ({ resourceName = null }) => (\n  <p className=\"text-center text-danger\">\n    {resourceName ? `Error loading ${resourceName}!` : 'Error loading!'}\n  </p>\n);\n\nexport default HasError;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { ListGroupItem } from 'reactstrap';\n\nimport TodoCompletedBadge from './TodoCompletedBadge';\n\nconst TodoListGroupItem = ({ id, text, completed }) => (\n  <ListGroupItem className=\"text-center\">\n    <h4>\n      {text} <TodoCompletedBadge completed={completed} />\n    </h4>\n    <Link to={`${process.env.PUBLIC_URL}/details/${id}`}>Details</Link>\n  </ListGroupItem>\n);\n\nexport default TodoListGroupItem;\n","import React from 'react';\nimport { ListGroup } from 'reactstrap';\n\nimport TodoListGroupItem from './TodoListGroupItem';\n\nconst TodoListGroup = ({ todos }) => (\n  <ListGroup>\n    {todos.map(todo => (\n      <TodoListGroupItem key={todo.id} {...todo} />\n    ))}\n  </ListGroup>\n);\n\nexport default TodoListGroup;\n","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport TodoListGroup from './TodoListGroup';\n\nconst TodoList = ({ todos }) => {\n  useDocumentTitle('Todos');\n\n  return (\n    <Row>\n      <Col xs={12}>\n        {todos.length ? <TodoListGroup todos={todos} /> : <p>No todos.</p>}\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport TodoContext from '../../contexts/TodoContext';\nimport TodoCreateLink from '../TodoCreateLink';\nimport IsLoading from '../IsLoading';\nimport HasError from '../HasError';\nimport TodoList from '../TodoList';\n\nconst TodoListPage = () => {\n  const { isLoading, error, todos } = useContext(TodoContext);\n\n  return (\n    <Row className=\"text-center\">\n      <Col xs={12}>\n        <h2>Todos</h2>\n        <TodoCreateLink />\n        <hr />\n      </Col>\n      <Col xs={12}>\n        {(() => {\n          if (isLoading) {\n            return <IsLoading resourceName=\"todos\" />;\n          }\n\n          if (error) {\n            return <HasError resourceName=\"todos\" />;\n          }\n\n          return <TodoList todos={todos} />;\n        })()}\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoListPage;\n"],"sourceRoot":""}
{"version":3,"sources":["hooks/useDocumentTitle.js","components/TodoCompletedBadge.js","components/TodoDetails.js","components/pages/TodoDetailsPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","useDocumentTitle","title","useEffect","document","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","TodoCompletedBadge","_ref","completed","a","createElement","color","formatDate","value","Date","toLocaleString","TodoDetails","todo","id","concat","text","react_default","reactstrap_es","className","xs","es","to","process","createdAt","createdBy","updatedAt","updatedBy","bordered","size","TodoDetailsPage","getTodoById","useContext","TodoContext","components_TodoDetails"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAWeC,IATU,SAAAC,GACvBC,oBACE,WACEC,SAASF,MAAQA,GAEnB,CAACA,uCCPL,IAAAH,EAAAC,EAAA,GAAAK,EAAAL,EAAAM,EAAAP,GAAAQ,EAAAP,EAAA,IASeQ,IANY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACzBL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAOM,MAAOH,EAAY,UAAY,UACnCA,EAAY,YAAc,yHCEzBI,EAAa,SAAAC,GAGjB,OAFW,IAAIC,KAAKD,GAEVE,kBAmEGC,EAhEK,SAAAT,GAAkB,IAAfU,EAAeV,EAAfU,KAAMC,EAASX,EAATW,GAG3B,GAFAnB,YAAiBkB,EAAI,gBAAAE,OAAmBF,EAAKG,KAAxB,UAAuC,mBAEvDH,EACH,OACEI,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKC,UAAU,eACbF,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAAA,4BACAW,EAAAZ,EAAAC,cAAA,YAEFW,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAAA,KAAGa,UAAU,gBAAb,kCAEGL,EAFH,OAMFG,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAE,GAAAP,OAAKQ,iCAAL,MAAR,WAlB4B,IAwB5BP,EAAgEH,EAAhEG,KAAMZ,EAA0DS,EAA1DT,UAAWoB,EAA+CX,EAA/CW,UAAWC,EAAoCZ,EAApCY,UAAWC,EAAyBb,EAAzBa,UAAWC,EAAcd,EAAdc,UAE1D,OACEV,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKC,UAAU,eACbF,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAAA,UACGU,EADH,IACSC,EAAAZ,EAAAC,cAACJ,EAAA,EAAD,CAAoBE,UAAWA,KAExCa,EAAAZ,EAAAC,cAAA,YAEFW,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAOU,UAAQ,EAACC,KAAK,MACnBZ,EAAAZ,EAAAC,cAAA,aACEW,EAAAZ,EAAAC,cAAA,UACEW,EAAAZ,EAAAC,cAAA,oBACAW,EAAAZ,EAAAC,cAAA,kBACAW,EAAAZ,EAAAC,cAAA,oBAGJW,EAAAZ,EAAAC,cAAA,aACEW,EAAAZ,EAAAC,cAAA,UACEW,EAAAZ,EAAAC,cAAA,oBACAW,EAAAZ,EAAAC,cAAA,UAAKE,EAAWgB,IAChBP,EAAAZ,EAAAC,cAAA,UAAKmB,IAEPR,EAAAZ,EAAAC,cAAA,UACEW,EAAAZ,EAAAC,cAAA,oBACAW,EAAAZ,EAAAC,cAAA,UAAKE,EAAWkB,IAChBT,EAAAZ,EAAAC,cAAA,UAAKqB,OAKbV,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAKE,GAAI,IACPH,EAAAZ,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAE,GAAAP,OAAKQ,iCAAL,MAAR,YC5DOO,UANS,SAAA3B,GAAY,IAATW,EAASX,EAATW,GAEnBD,GAAOkB,EADWC,qBAAWC,KAA3BF,aACiBjB,GAEzB,OAAOG,EAAAZ,EAAAC,cAAC4B,EAAD,CAAarB,KAAMA,EAAMC,GAAIA","file":"static/js/TodoDetailsPage.0c9fa52a.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nconst useDocumentTitle = title => {\n  useEffect(\n    () => {\n      document.title = title;\n    },\n    [title]\n  );\n};\n\nexport default useDocumentTitle;\n","import React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst TodoCompletedBadge = ({ completed }) => (\n  <Badge color={completed ? 'success' : 'danger'}>\n    {completed ? 'Completed' : 'Not Completed'}\n  </Badge>\n);\n\nexport default TodoCompletedBadge;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { Row, Col, Table } from 'reactstrap';\n\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport TodoCompletedBadge from './TodoCompletedBadge';\n\nconst formatDate = value => {\n  const dt = new Date(value);\n\n  return dt.toLocaleString();\n};\n\nconst TodoDetails = ({ todo, id }) => {\n  useDocumentTitle(todo ? `Details for \"${todo.text}\" todo` : 'Todo Not Found');\n\n  if (!todo) {\n    return (\n      <Row className=\"text-center\">\n        <Col xs={12}>\n          <h2>Todo Not Found</h2>\n          <hr />\n        </Col>\n        <Col xs={12}>\n          <p className=\" text-danger\">\n            A todo does not exist with id &#34;\n            {id}\n            &#34;.\n          </p>\n        </Col>\n        <Col xs={12}>\n          <Link to={`${process.env.PUBLIC_URL}/`}>Todos</Link>\n        </Col>\n      </Row>\n    );\n  }\n\n  const { text, completed, createdAt, createdBy, updatedAt, updatedBy } = todo;\n\n  return (\n    <Row className=\"text-center\">\n      <Col xs={12}>\n        <h2>\n          {text} <TodoCompletedBadge completed={completed} />\n        </h2>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <Table bordered size=\"sm\">\n          <thead>\n            <tr>\n              <th>Action</th>\n              <th>Date</th>\n              <th>User</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Create</td>\n              <td>{formatDate(createdAt)}</td>\n              <td>{createdBy}</td>\n            </tr>\n            <tr>\n              <td>Update</td>\n              <td>{formatDate(updatedAt)}</td>\n              <td>{updatedBy}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Col>\n      <Col xs={12}>\n        <Link to={`${process.env.PUBLIC_URL}/`}>Todos</Link>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoDetails;\n","import React, { useContext } from 'react';\n\nimport TodoContext from '../../contexts/TodoContext';\nimport TodoDetails from '../TodoDetails';\n\nconst TodoDetailsPage = ({ id }) => {\n  const { getTodoById } = useContext(TodoContext);\n  const todo = getTodoById(id);\n\n  return <TodoDetails todo={todo} id={id} />;\n};\nexport default TodoDetailsPage;\n"],"sourceRoot":""}
{"version":3,"sources":["components/TodoCompletedBadge.js","hooks/useDocumentTitle.js","components/TodoDetails.js","components/pages/TodoDetailsPage.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","TodoCompletedBadge","_ref","completed","a","createElement","color","useDocumentTitle","title","useEffect","document","TodoDetails","id","todo","deleteTodo","concat","text","handleDelete","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","then","navigate","makeTo","catch","_ref3","message","alert","stop","this","apply","arguments","react_default","reactstrap_es","className","xs","es","to","createdAt","createdBy","updatedAt","updatedBy","type","onClick","bordered","size","formatDate","TodoDetailsPage","_useContext","useContext","TodoContext","getTodoById","components_TodoDetails"],"mappings":"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","file":"static/js/TodoDetailsPage.03f8b550.chunk.js","sourcesContent":["import React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst TodoCompletedBadge = ({ completed }) => (\n  <Badge color={completed ? 'success' : 'danger'}>\n    {completed ? 'Completed' : 'Not Completed'}\n  </Badge>\n);\n\nexport default TodoCompletedBadge;\n","import { useEffect } from 'react';\n\nconst useDocumentTitle = title => {\n  useEffect(\n    () => {\n      document.title = title;\n    },\n    [title]\n  );\n};\n\nexport default useDocumentTitle;\n","import React from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Row, Col, Table } from 'reactstrap';\nimport TodoCompletedBadge from './TodoCompletedBadge';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport { formatDate } from '../utils/date';\nimport { makeTo } from '../utils/router';\n\nconst TodoDetails = ({ id, todo, deleteTodo }) => {\n  useDocumentTitle(todo ? `Details for \"${todo.text}\" todo` : 'Todo Not Found');\n\n  const handleDelete = async () => {\n    await deleteTodo(id)\n      .then(() => navigate(makeTo('/')))\n      .catch(({ message }) => alert(`Error deleting todo: ${message}`));\n  };\n\n  if (!todo) {\n    return (\n      <Row className=\"text-center\">\n        <Col xs={12}>\n          <h2>Todo Not Found</h2>\n          <hr />\n        </Col>\n        <Col xs={12}>\n          <p className=\" text-danger\">\n            A todo does not exist with id &#34;\n            {id}\n            &#34;.\n          </p>\n        </Col>\n        <Col xs={12}>\n          <Link to={makeTo('/')}>All Todos</Link>\n        </Col>\n      </Row>\n    );\n  }\n\n  const { text, completed, createdAt, createdBy, updatedAt, updatedBy } = todo;\n\n  return (\n    <Row className=\"text-center\">\n      <Col xs={12}>\n        <h2>\n          {text} <TodoCompletedBadge completed={completed} />\n        </h2>\n        <button\n          type=\"button\"\n          className=\"look-like-a-link\"\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n        <hr />\n      </Col>\n      <Col xs={12}>\n        <Table bordered size=\"sm\">\n          <thead>\n            <tr>\n              <th>Action</th>\n              <th>Date</th>\n              <th>User</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Create</td>\n              <td>{formatDate(createdAt)}</td>\n              <td>{createdBy}</td>\n            </tr>\n            <tr>\n              <td>Update</td>\n              <td>{formatDate(updatedAt)}</td>\n              <td>{updatedBy}</td>\n            </tr>\n          </tbody>\n        </Table>\n      </Col>\n      <Col xs={12}>\n        <Link to={makeTo('/')}>All Todos</Link>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TodoDetails;\n","import React, { useContext } from 'react';\nimport TodoContext from '../../contexts/TodoContext';\nimport TodoDetails from '../TodoDetails';\n\nconst TodoDetailsPage = ({ id }) => {\n  const { getTodoById, deleteTodo } = useContext(TodoContext);\n  const todo = getTodoById(id);\n\n  return <TodoDetails id={id} todo={todo} deleteTodo={deleteTodo} />;\n};\nexport default TodoDetailsPage;\n"],"sourceRoot":""}